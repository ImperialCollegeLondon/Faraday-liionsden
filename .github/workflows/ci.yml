name: CI Liionsden

on: [push]

jobs:

  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pre-commit/action@v2.0.2

  test:

    needs: qa

    runs-on: ubuntu-latest
    env:
      ADMIN_PASSWORD: password
      AZURE_STORAGE_CONTAINER: test
      AZURE_STORAGE_ACCOUNT_NAME: devstoreaccount1
      AZURE_STORAGE_CONNECTION_STRING: DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://localhost:10000/devstoreaccount1;QueueEndpoint=http://localhost:10001/devstoreaccount1;
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite:3.24.0
        ports:
          - 10000:10000
          - 10001:10001
          - 10002:10002
        options: --health-cmd "nc -z 127.0.0.1 10000"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
    - name: Run migrations
      run: python manage.py migrate
    - name: Create storage container
      run: python manage.py createstoragecontainer
    - name: Run tests
      env:
        AZURE_STORAGE_ACCOUNT_KEY: '${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}'
        PRIVACY_NOTICE_SAS_URL: '${{ secrets.PRIVACY_NOTICE_SAS_URL }}'
      run: python manage.py test

  publish:
    if: github.ref == 'refs/heads/main'
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: docker.pkg.github.com/imperialcollegelondon/faraday-liionsden/liionsden:${{ github.sha }}, docker.pkg.github.com/imperialcollegelondon/faraday-liionsden/liionsden:latest
      
      - name: Deploy to Azure Web Apps
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'liionsden-prod-app'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'ghcr.io/imperialcollegelondon/faraday-liionsden/liionsden:${{ github.sha }}'
