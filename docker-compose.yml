version: "3.9"

services:
  db:
    image: postgres:13
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:3.20.1
    volumes:
      - azurite:/data
    ports:
      - "10000:10000"
    healthcheck:
      test: nc -z 127.0.0.1 10000
      interval: 5s
      timeout: 5s
      retries: 5
  web:
    build: .
    environment:
      - LOGGING_FILE=/usr/src/app/log/liionsden
      - AZURE_STORAGE_ACCOUNT_KEY
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_HOST=db
      - ADMIN_PASSWORD=password
      - AZURE_STORAGE_CONTAINER=test
      - AZURE_STORAGE_ACCOUNT_NAME=devstoreaccount1
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;
    volumes:
      - .:/usr/src/app
      - ./log:/usr/src/app/log
    ports:
      - 8000:8000
      - 2222:2222
    depends_on:
      db:
        condition: service_healthy
      azurite:
        condition: service_healthy
volumes:
  azurite:
  db:
